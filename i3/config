# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $mod_def "default"; exec --no-startup-id sh ~/.config/i3/red-screen.sh off;
set $exec_red_screen exec --no-startup-id sh ~/.config/i3/red-screen.sh on;

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display  6

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show combi
# There also is the (new) i5-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i4-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
bindsym $mod+backslash	workspace back_and_forth
bindsym $mod+less workspace prev
bindsym $mod+greater  workspace next

bindsym $mod+Shift+greater  move container to workspace next
bindsym $mod+Shift+less move container to workspace prev

set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10:"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode $mod_def
        bindsym Escape mode $mod_def
        bindsym $mod+r mode $mod_def
}

bindsym $mod+r mode "resize"; $exec_red_screen;

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#
#colors
set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $active-bg-color     #8c99ba
set $text-color          #ffffff
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $active-bg-color   $active-bg-color   $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          #00ff00

for_window [class="Pavucontrol"] floating enable
for_window [urgent=latest] focus

bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
	font pango: FontAwesom5Free, FontAwesome5Brands, FontAwesome5Solid 8
        mode hide
        hidden_state hide
        modifier $mod
        bindsym button1 nop

colors {
		background $bg-color
	        separator #757575
		#                  border             background         text
		focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	}
}

hide_edge_borders vertical

bindsym Control+Shift+L exec betterlockscreen -l dim -t "Hello World!!"
bindsym $mod+shift+x exec betterlockscreen -l dim -t "Hello World!!"
bindsym XF86PowerOff exec betterlockscreen -l dim -t "Hello World!!"
# bindsym Control+Alt+Delete exec suspend

exec --no-startup-id mpd
exec --no-startup-id mpd-mpris
exec --no-startup-id feh --bg-fill ~/Pictures/wall0.jpg
exec --no-startup-id xfce4-clipman
exec --no-startup-id "setxkbmap -model pc105 -layout us,np -option grp:alt_shift_toggle"

exec --no-startup-id dunst
exec --no-startup-id cbatticon -u 15 -c "sctl suspend"
# notification for ac unplugged
# exec --no-startup-id bash /home/sz/.config/ac_unplugged_notification.sh

exec --no-startup-id picom -b --config ~/.config/picomp.conf

#block touchpad for 1 sec while typing
exec --no-startup-id syndaemon -i 1 -t -K -R -d

bindsym Mod1+Control+v exec --no-startup-id xfce4-popup-clipman
bindsym --release Print exec --no-startup-id  import png:- | xclip -selection clipboard -t image/png
bindsym --release Shift+Print exec --no-startup-id import  ~/Pictures/screen$(date '+%Y-%m-%d_%H_%M_%S').png


#assign [class="Audacious"] $ws10
assign [class="Viber"] $ws10

assign [class="TelegramDesktop"] $ws8
#assign [class="Google-chrome"] $ws3
#assign [class="Google-chrome"] $ws3
#assign [class="Xfce4-terminal"] $ws9
#assign [class="Code"] $ws1

#set $sink `pactl list short sinks | grep RUNNING | cut -f1`
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute $sink toggle


#MEDIA-CONTROLLS
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% && pkill -RTMIN+10 i3blocks #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% && pkill -RTMIN+10 i3blocks #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle && pkill -RTMIN+10 i3blocks # mute sound


# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 # decrease screen brightness

# Touchpad controls
# bindsym XF86TouchpadToggle exec ~/toggletouch.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#CUSTOM KEY BINDINGS
bindsym $mod+o exec "nautilus"
bindsym $mod+Shift+s sticky toggle
#open terminal at same location
bindsym $mod+Shift+Return exec urxvt -cd `xdotool getactivewindow getwindowname | cut -d ":" -f 2 | sed -e 's@~@'"$HOME"'@'`
#chrome fullscreen hack
bindsym $mod+Shift+f split v; focus parent; fullscreen toggle; focus child

bindsym $mod+y fullscreen disable; floating enable; resize set 355 200; sticky enable; move window to position 1010 0;border none;

default_border pixel 1
popup_during_fullscreen smart
